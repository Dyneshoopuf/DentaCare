package dentalsoftwareapp;

import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Roy
 */
public class Login extends javax.swing.JFrame {

    private Connection con;
    private Statement st;
    private ResultSet rs;
    private PreparedStatement pst;
    String filename = null;
    byte[] person_image = null;

    /**
     * Creates new form LoginLight
     */
    public Login() {
        initComponents();
        setLocationRelativeTo(null);
        modifyCloseButton();
        pack();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/teethManager.png")));
        getDate();

        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/registerdb", "root", "");
            st = con.createStatement();
        } catch (Exception ex) {
            System.out.println("Error: " + ex);

        }

    }

    public void getDate() {

        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);

        date.setText((month + 1) + "/" + day + "/" + year);

        int second = cal.get(Calendar.SECOND);
        int zeroMinute = 0;
        int minute = cal.get(Calendar.MINUTE);
        int hour = cal.get(Calendar.HOUR);

        if (minute < 10) {
            time.setText(hour + ":" + zeroMinute + (minute) + ":" + second);
        } else {
            time.setText(hour + ":" + (minute) + ":" + second);
        }

    }

    private void modifyCloseButton() {

        closeButton.setToolTipText("Close the application");
        closeButton.setContentAreaFilled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Refresh = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        pnl_bg = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        login = new javax.swing.JPanel();
        txt_username = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        login_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txt_password = new javax.swing.JPasswordField();
        closeButton = new javax.swing.JButton();
        maximizeButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        minimizeButton = new javax.swing.JButton();
        lbl_capslock = new javax.swing.JLabel();
        lbl_capslock2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        forgotpasswordButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        seePassword = new javax.swing.JCheckBox();
        date = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        loader = new javax.swing.JPanel();
        img_loader = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Refresh);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Exit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(754, 487));

        pnl_bg.setBackground(new java.awt.Color(255, 255, 255));
        pnl_bg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnl_bgMouseEntered(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(754, 487));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });
        jPanel1.setLayout(new java.awt.CardLayout());

        login.setBackground(new java.awt.Color(255, 255, 255));
        login.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        login.setPreferredSize(new java.awt.Dimension(754, 487));
        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                loginMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                loginMouseReleased(evt);
            }
        });
        login.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                loginMouseDragged(evt);
            }
        });

        txt_username.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        txt_username.setText("Username");
        txt_username.setBorder(null);
        txt_username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_usernameMouseClicked(evt);
            }
        });
        txt_username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_usernameFocusGained(evt);
            }
        });
        txt_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_usernameKeyPressed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 204, 255));
        jSeparator1.setForeground(new java.awt.Color(0, 204, 255));

        jSeparator2.setBackground(new java.awt.Color(0, 204, 255));
        jSeparator2.setForeground(new java.awt.Color(0, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/username.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/unlock.png"))); // NOI18N
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
        });

        login_button.setBackground(new java.awt.Color(0, 204, 255));
        login_button.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        login_button.setForeground(new java.awt.Color(255, 255, 255));
        login_button.setText("Login");
        login_button.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        login_button.setContentAreaFilled(false);
        login_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        login_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                login_buttonMouseEntered(evt);
            }
        });
        login_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(login_button, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(login_button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel4.setText("Login");

        txt_password.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        txt_password.setText("Password");
        txt_password.setBorder(null);
        txt_password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_passwordFocusGained(evt);
            }
        });
        txt_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_passwordKeyPressed(evt);
            }
        });

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/close.png"))); // NOI18N
        closeButton.setBorder(null);
        closeButton.setContentAreaFilled(false);
        closeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
        });
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        maximizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/maximize.png"))); // NOI18N
        maximizeButton.setBorder(null);
        maximizeButton.setContentAreaFilled(false);
        maximizeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        maximizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                maximizeButtonMouseEntered(evt);
            }
        });
        maximizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maximizeButtonActionPerformed(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(102, 102, 102));
        jSeparator3.setForeground(new java.awt.Color(51, 51, 51));
        jSeparator3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(102, 102, 102)));

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 2, 12)); // NOI18N
        jLabel6.setText("Program Alpha");

        jSeparator4.setBackground(new java.awt.Color(102, 102, 102));
        jSeparator4.setForeground(new java.awt.Color(51, 51, 51));
        jSeparator4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(102, 102, 102)));

        minimizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/minimize.png"))); // NOI18N
        minimizeButton.setBorder(null);
        minimizeButton.setContentAreaFilled(false);
        minimizeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeButtonMouseEntered(evt);
            }
        });
        minimizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeButtonActionPerformed(evt);
            }
        });

        lbl_capslock.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N

        lbl_capslock2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N

        jLabel7.setBackground(new java.awt.Color(0, 204, 255));
        jLabel7.setForeground(new java.awt.Color(0, 204, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/login.gif"))); // NOI18N

        forgotpasswordButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        forgotpasswordButton.setForeground(new java.awt.Color(0, 204, 255));
        forgotpasswordButton.setText("Forgot Password");
        forgotpasswordButton.setToolTipText("Under construction");
        forgotpasswordButton.setBorder(null);
        forgotpasswordButton.setContentAreaFilled(false);
        forgotpasswordButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                forgotpasswordButtonMouseEntered(evt);
            }
        });

        registerButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        registerButton.setForeground(new java.awt.Color(0, 204, 255));
        registerButton.setText("Not yet registered? Click here");
        registerButton.setBorder(null);
        registerButton.setContentAreaFilled(false);
        registerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerButtonMouseEntered(evt);
            }
        });
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        seePassword.setBorder(null);
        seePassword.setContentAreaFilled(false);
        seePassword.setFocusPainted(false);
        seePassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/antieye.png"))); // NOI18N
        seePassword.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/eye.png"))); // NOI18N
        seePassword.setVerifyInputWhenFocusTarget(false);
        seePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                seePasswordMouseEntered(evt);
            }
        });
        seePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seePasswordActionPerformed(evt);
            }
        });

        date.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        date.setText("Date");

        time.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        time.setText("Time");

        javax.swing.GroupLayout loginLayout = new javax.swing.GroupLayout(login);
        login.setLayout(loginLayout);
        loginLayout.setHorizontalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginLayout.createSequentialGroup()
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(loginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator3))
                    .addGroup(loginLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6)))
                .addContainerGap())
            .addGroup(loginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registerButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginLayout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(27, 27, 27)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(loginLayout.createSequentialGroup()
                        .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_username)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_password)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginLayout.createSequentialGroup()
                                .addComponent(forgotpasswordButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3)
                        .addComponent(seePassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_capslock, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_capslock2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(49, 49, 49))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(180, 180, 180)
                .addComponent(minimizeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maximizeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton))
            .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(loginLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator4)
                    .addContainerGap()))
        );
        loginLayout.setVerticalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayout.createSequentialGroup()
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maximizeButton)
                    .addComponent(closeButton)
                    .addComponent(minimizeButton)
                    .addGroup(loginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(date)
                                .addComponent(time))
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel4)
                .addGap(61, 61, 61)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(loginLayout.createSequentialGroup()
                        .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_capslock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginLayout.createSequentialGroup()
                        .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(seePassword)
                        .addComponent(lbl_capslock2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6))
                    .addGroup(loginLayout.createSequentialGroup()
                        .addComponent(forgotpasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 48, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginLayout.createSequentialGroup()
                    .addContainerGap(455, Short.MAX_VALUE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(30, 30, 30)))
        );

        jPanel1.add(login, "card2");

        loader.setBackground(new java.awt.Color(255, 255, 255));
        loader.setLayout(null);

        img_loader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/ring.gif"))); // NOI18N
        loader.add(img_loader);
        img_loader.setBounds(300, 220, 137, 142);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Logging in...");
        loader.add(jLabel1);
        jLabel1.setBounds(310, 370, 97, 25);

        jPanel1.add(loader, "card3");

        pnl_bg.add(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_bg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_bg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int xx, xy;
    private void login_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_buttonActionPerformed
        // TODO add your handling code here:
        loader.setVisible(true);
        login.setVisible(false);
        try {

        } catch (Exception ex) {

        }

        int count = 0;
        int counterUsername = 1;
        int counterPassword = 1;

        try {
            //  String sql = "SELECT `Username`, `Password` FROM `registertbl` WHERE `Username`= ? and `Password` = ?";
            String username = txt_username.getText().trim();
            char[] charPassword = txt_password.getPassword();
            String password = String.valueOf(charPassword);

            String loginQuery = "SELECT Username and Password FROM registertbl WHERE Username= '" + username + "' and Password = '" + password + "'";

            rs = st.executeQuery(loginQuery);

            while (rs.next()) {
                count = count + 1;
            }
            if (txt_username.getText().trim().equalsIgnoreCase("")) {

                counterUsername -= 1;

            } else if (!txt_username.getText().trim().equalsIgnoreCase("")) {
                counterUsername += 1;

            }
            if (String.valueOf(txt_password.getPassword()).equalsIgnoreCase("")) {

                counterPassword -= 1;

            } else if (!String.valueOf(txt_password.getPassword()).equalsIgnoreCase("")) {
                counterPassword += 1;

            }
            System.out.println("counterUsername is " + counterUsername);
            System.out.println("counterPassword is " + counterPassword);
            if (count == 1) {

                System.out.println("success log in!");
                this.dispose();
                Home home = new Home();
                home.setVisible(true);
                home.setLocationRelativeTo(this);

                //continue revise here
                /*  
                 ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(home.lbl_img.getWidth(), home.lbl_img.getHeight(), Image.SCALE_DEFAULT));
                 home.lbl_img.setIcon(imageIcon);
                 try {

                 File image = new File(filename);
                 FileInputStream fis = new FileInputStream(image);
                 ByteArrayOutputStream bos = new ByteArrayOutputStream();
                 byte[] buf = new byte[1024];

                 for (int readNum; (readNum = fis.read(buf)) != -1;) {

                 bos.write(buf, 0, readNum);
                 }
                 person_image = bos.toByteArray();
                 } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, e);

                 }
                
                 */
            } else if (count == 0 && counterUsername == 2 && counterPassword == 2) {

                Processor processor = new Processor();
                int tries = 6;

                Object[] options = {"Re-try",
                    "Cancel"};
                int userOption = JOptionPane.showOptionDialog(null, "Username and or password is are incorrect.",
                        "Login failed!",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        new ImageIcon(getClass().getResource("/resources/access denied.png")),
                        options,
                        options[0]);

                if (userOption == 0) {

                    if (tries < 7) {
                        tries += 1;
                        Thread.sleep(1500);

                        revalidate();

                        login.setVisible(true);
                        loader.setVisible(false);
                    } else if (tries >= 6) {
                        JOptionPane.showMessageDialog(null, "You have entered incorrect log-in information multiple times! Try again later...", "Closing app...", JOptionPane.ERROR_MESSAGE);
                        System.exit(1);
                    }

                }
                if (userOption == 1) {
                    login.setVisible(true);
                    loader.setVisible(false);
                }
                //JOptionPane.showMessageDialog(this, "Username and or password is or are incorrect", "Login Failed!", JOptionPane.ERROR_MESSAGE);
                // processor.loginProduce();
                //Thread.sleep(1999);
                // loader.setVisible(false);

            } else if (counterUsername < 1 && counterPassword < 1) {
                JOptionPane.showMessageDialog(null, "Username and password cannot be blank", "Login failed ", JOptionPane.ERROR_MESSAGE);
                login.setVisible(true);
                loader.setVisible(false);
            } else if (counterUsername == 2 && counterPassword < 1) {
                JOptionPane.showMessageDialog(null, "Password cannot be blank", "Login failed ", JOptionPane.ERROR_MESSAGE);
                login.setVisible(true);
                loader.setVisible(false);

            } else if (counterUsername < 1 && counterPassword == 2) {
                JOptionPane.showMessageDialog(null, "Username cannot be blank", "Login failed ", JOptionPane.ERROR_MESSAGE);
                login.setVisible(true);
                loader.setVisible(false);
            }
        } catch (Exception e) {

        }

        /*  String loginQuery = "SELECT Username, Password FROM registertbl WHERE Username=? and Password =?";
         try {
         pst = con.prepareStatement(loginQuery);
         pst.setString(1, txt_username.getText());
         pst.setString(2, Arrays.toString(txt_password.getPassword()));

         rs = pst.executeQuery();

         if (rs.next()) {
         JOptionPane.showMessageDialog(null, "Welcome user");
         System.out.println("Logged in successfully");
         } else {
         JOptionPane.showMessageDialog(null, "Incorrect username and or password!");
         }
         } catch (Exception ex) {

         }
         */
    }//GEN-LAST:event_login_buttonActionPerformed

    private void txt_usernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_usernameFocusGained
        // TODO add your handling code here:
        if (txt_username != null && !txt_username.getText().equalsIgnoreCase("Username")) {
            String username = txt_username.getText().trim();
            txt_username.setText(username);
        } else if (txt_username.getText().equals("Username")) {
            txt_username.setText("");
        }


    }//GEN-LAST:event_txt_usernameFocusGained

    private void txt_passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_passwordFocusGained
        // TODO add your handling code here:
        if (String.valueOf(txt_password.getPassword()).trim().equalsIgnoreCase("Password")) {
            txt_password.setText("");
        }
        if (txt_password.getPassword() != null) {

        }
    }//GEN-LAST:event_txt_passwordFocusGained

    private void loginMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_loginMouseDragged

    private void loginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMousePressed
        // TODO add your handling code here:
        setOpacity((float) 0.8);
        xx = evt.getX();
        xy = evt.getY();


    }//GEN-LAST:event_loginMousePressed

    private void loginMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseReleased
        // TODO add your handling code here:
        setOpacity((float) 1.0);
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_loginMouseReleased

    private void loginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseEntered
        // TODO add your handling code here:
        final Toolkit toolkit = Toolkit.getDefaultToolkit();
        final Image imageCursor = toolkit.getImage(getClass().getResource("/resources/default icon.png"));
        final Cursor customCursor = toolkit.createCustomCursor(imageCursor, new Point(0, 0), "");
        login.setCursor(customCursor);


    }//GEN-LAST:event_loginMouseEntered

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel1MouseEntered

    private void pnl_bgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_bgMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_pnl_bgMouseEntered

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:

        System.exit(0);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseEntered
        // TODO add your handling code here:
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image imageCursor = toolkit.getImage(getClass().getResource("/resources/hand cursor.png"));
        Cursor customCursor = toolkit.createCustomCursor(imageCursor, new Point(0, 0), "");
        closeButton.setCursor(customCursor);
    }//GEN-LAST:event_closeButtonMouseEntered

    private void maximizeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maximizeButtonMouseEntered
        // TODO add your handling code here:
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image imageCursor = toolkit.getImage(getClass().getResource("/resources/hand cursor.png"));
        Cursor customCursor = toolkit.createCustomCursor(imageCursor, new Point(0, 0), "");
        maximizeButton.setCursor(customCursor);
    }//GEN-LAST:event_maximizeButtonMouseEntered

    private void maximizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maximizeButtonActionPerformed
        // TODO add your handling code here:

        /* GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
         this.setExtendedState(this.getExtendedState() | this.MAXIMIZED_BOTH);
         */
        if (getExtendedState() == NORMAL) {
            setExtendedState(MAXIMIZED_BOTH);
        } else {
            setExtendedState(NORMAL);
        }


    }//GEN-LAST:event_maximizeButtonActionPerformed

    private void minimizeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonMouseEntered
        // TODO add your handling code here:
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image imageCursor = toolkit.getImage(getClass().getResource("/resources/hand cursor.png"));
        Cursor customCursor = toolkit.createCustomCursor(imageCursor, new Point(0, 0), "");
        minimizeButton.setCursor(customCursor);
    }//GEN-LAST:event_minimizeButtonMouseEntered

    private void minimizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeButtonActionPerformed
        // TODO add your handling code here:
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_minimizeButtonActionPerformed

    private void txt_usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_usernameKeyPressed
        // TODO add your handling code here:

        boolean checkCapsState = Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK);

        if (checkCapsState == true) {
            lbl_capslock.setText("CAPS LOCK is on");
        } else {
            lbl_capslock.setText("CAPS LOCK is off");
        }
    }//GEN-LAST:event_txt_usernameKeyPressed

    private void txt_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_passwordKeyPressed
        // TODO add your handling code here:

        boolean checkCapsState = Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK);

        if (checkCapsState == true) {
            lbl_capslock.setText("CAPS LOCK is on");
        } else {
            lbl_capslock.setText("CAPS LOCK is off");
        }
    }//GEN-LAST:event_txt_passwordKeyPressed

    private void registerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerButtonMouseEntered
        // TODO add your handling code here:
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image imageCursor = toolkit.getImage(getClass().getResource("/resources/hand cursor.png"));
        Cursor customCursor = toolkit.createCustomCursor(imageCursor, new Point(0, 0), "");
        registerButton.setCursor(customCursor);
    }//GEN-LAST:event_registerButtonMouseEntered

    private void forgotpasswordButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotpasswordButtonMouseEntered
        // TODO add your handling code here:
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image imageCursor = toolkit.getImage(getClass().getResource("/resources/hand cursor.png"));
        Cursor customCursor = toolkit.createCustomCursor(imageCursor, new Point(0, 0), "");
        forgotpasswordButton.setCursor(customCursor);
    }//GEN-LAST:event_forgotpasswordButtonMouseEntered

    private void seePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seePasswordActionPerformed
        // TODO add your handling code here:
        if (seePassword.isSelected()) {
            txt_password.setEchoChar((char) 0);
        } else {
            txt_password.setEchoChar('*');
        }
    }//GEN-LAST:event_seePasswordActionPerformed

    private void seePasswordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seePasswordMouseEntered
        // TODO add your handling code here:
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image imageCursor = toolkit.getImage(getClass().getResource("/resources/hand cursor.png"));
        Cursor customCursor = toolkit.createCustomCursor(imageCursor, new Point(0, 0), "");
        seePassword.setCursor(customCursor);
        revalidate();
    }//GEN-LAST:event_seePasswordMouseEntered

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        SignUp signUp = new SignUp();
        this.dispose();
        signUp.setVisible(true);
    }//GEN-LAST:event_registerButtonActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        getDate();
        revalidate();
    }//GEN-LAST:event_RefreshActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void txt_usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_usernameMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_usernameMouseClicked

    private void login_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_buttonMouseEntered
        // TODO add your handling code here:
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image imageCursor = toolkit.getImage(getClass().getResource("/resources/hand cursor.png"));
        Cursor customCursor = toolkit.createCustomCursor(imageCursor, new Point(0, 0), "");
        login_button.setCursor(customCursor);
    }//GEN-LAST:event_login_buttonMouseEntered

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel2MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem Refresh;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel date;
    private javax.swing.JButton forgotpasswordButton;
    private javax.swing.JLabel img_loader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lbl_capslock;
    private javax.swing.JLabel lbl_capslock2;
    private javax.swing.JPanel loader;
    private javax.swing.JPanel login;
    private javax.swing.JButton login_button;
    private javax.swing.JButton maximizeButton;
    private javax.swing.JButton minimizeButton;
    private javax.swing.JPanel pnl_bg;
    private javax.swing.JButton registerButton;
    private javax.swing.JCheckBox seePassword;
    private javax.swing.JLabel time;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
